name: Deploy Temporal AI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'client/package-lock.json'

      - name: Install dependencies
        run: |
          cd client
          npm ci

      - name: Build frontend
        run: |
          cd client
          npm run build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./client

  deploy-backend:
    name: Build Backend Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/temporal-ai-backend:latest
            ${{ secrets.DOCKER_USERNAME }}/temporal-ai-backend:${{ github.sha }}
          platforms: linux/amd64,linux/arm64

  deploy-akash:
    name: Deploy to Akash Network
    runs-on: ubuntu-latest
    needs: deploy-backend
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Akash CLI
        run: |
          curl -sSfL https://raw.githubusercontent.com/akash-network/provider/main/install.sh | sh
          sudo mv ./bin/provider-services /usr/local/bin/akash

      - name: Deploy to Akash
        run: |
          echo "${{ secrets.AKASH_KEY }}" | akash keys add default --recover --keyring-backend test
          akash tx deployment create deploy.yml \
            --from default \
            --keyring-backend test \
            --gas-prices="0.025uakt" \
            --gas="auto" \
            --gas-adjustment=1.15 \
            --yes
        env:
          AKASH_CHAIN_ID: akashnet-2
          AKASH_NODE: https://rpc.akash.forbole.com:443 